p <- likert(res)
if(m == 1){
title = "Time Step 1"
PR1 <- plot(p, centered=FALSE) + ggtitle(title)
}
if(m == 2){
title = "Time Step 2"
PR2 <- plot(p, centered=FALSE) + ggtitle(title)
}
if(m == 3){
title = "Time Step 3"
PR3 <- plot(p, centered=FALSE) + ggtitle(title)
}
}
ggarrange(
#bxp, dp, labels = c("A", "B"),
PR1, PR2,PR3,
common.legend = TRUE, nrow=1, ncol=3, legend = "bottom"
)
sent_pvalues_1 <- read.table(file="all_pvalue_Sentiment_ts_1_7.csv", sep=",", head=TRUE)
sent_pvalues_2 <- read.table(file="all_pvalue_Sentiment_ts_2_7.csv", sep=",", head=TRUE)
sent_pvalues_3 <- read.table(file="all_pvalue_Sentiment_ts_3_7.csv", sep=",", head=TRUE)
sent_pvalues_1_2_3 <- data.frame(cbind(sent_pvalues_1$pvalue_sentiment,
sent_pvalues_2$pvalue_sentiment,
sent_pvalues_3))
sent_pvalues_1_2_3 <- sent_pvalues_1_2_3 %>%
dplyr::rename(Period1=sent_pvalues_1.pvalue_sentiment,
Period2=sent_pvalues_2.pvalue_sentiment,
Period3=pvalue_sentiment,
PFA=X, Region = X.1)%>%
dplyr::relocate(Region, .before=Period1) %>%
dplyr::relocate(PFA, .before=Period1)%>%
dplyr::select(-c(Region))
sent_pvalues_1_2_3 <- sent_pvalues_1_2_3 %>%
dplyr::rename(p.Period1=Period1, p.Period2=Period2, p.Period3=Period3)
sign_sentm_1 <- read.table(file="all_sentiment_signs_ts_1_7.csv", sep=",", head=TRUE)
sign_sentm_2 <- read.table(file="all_sentiment_signs_ts_2_7.csv", sep=",", head=TRUE)
sign_sentm_3 <- read.table(file="all_sentiment_signs_ts_3_7.csv", sep=",", head=TRUE)
sign_sentm_1_2_3 <- data.frame(cbind(sign_sentm_1$V1, sign_sentm_2$V1, sign_sentm_3))
sign_sentm_1_2_3 <- sign_sentm_1_2_3 %>%
dplyr::rename(Period1=sign_sentm_1.V1,
Period2=sign_sentm_2.V1,
Period3=V1,
PFA=V2, Region = V3)%>%
dplyr::relocate(Region, .before=Period1) %>%
dplyr::relocate(PFA, .before=Period1)%>%
dplyr::select(-c(Region))
sign_sentm_1_2_3 <- sign_sentm_1_2_3 %>%
dplyr::rename(s.Period1=Period1, s.Period2=Period2, s.Period3=Period3)
sent_scores_1_2_3 <- read.table(file="all_obs_exp_Sentiment_ts_1_2_3_ALL_7.csv", sep=",", head=TRUE)
sent_scores_1_2_3 <- sent_scores_1_2_3 %>%
dplyr::select(Country, Period, net_sentiment_OSD)
sent_scores_1_2_3 <- t(dcast(sent_scores_1_2_3, Period ~ Country))
sent_scores_1_2_3 <- sent_scores_1_2_3[2:nrow(sent_scores_1_2_3), ]
sent_scores_1_2_3 <- data.frame(cbind(rownames(sent_scores_1_2_3), sent_scores_1_2_3))
colnames(sent_scores_1_2_3) <- c("PFA", "Period1","Period2","Period3")
sent_scores_1_2_3$Period1 <- as.numeric(sent_scores_1_2_3$Period1)
sent_scores_1_2_3$Period2 <- as.numeric(sent_scores_1_2_3$Period2)
sent_scores_1_2_3$Period3 <- as.numeric(sent_scores_1_2_3$Period3)
sent_scores_1_2_3 <- sent_scores_1_2_3 %>%
dplyr::rename(r.Period1=Period1, r.Period2=Period2, r.Period3=Period3)
PFA <- gsub(".", " ", sent_scores_1_2_3$PFA, fixed=TRUE)
sent_scores_1_2_3$PFA <- PFA
sent_pvalues_sign_1_2_3 <- sent_pvalues_1_2_3 %>%
dplyr::left_join(sign_sentm_1_2_3)
PFA <- gsub("-", " ", sent_pvalues_sign_1_2_3$PFA, fixed=TRUE)
sent_pvalues_sign_1_2_3$PFA <- PFA
sent_pvalues_sign_scores_1_2_3 <- sent_pvalues_sign_1_2_3 %>%
dplyr::left_join(sent_scores_1_2_3)
p_class <- NULL
loop_col <- (ncol(sent_pvalues_sign_scores_1_2_3)-1)/3
for(i in 1:loop_col){ #i<-3
#to assign -ve or +ve depending on the if obs > exp.
n_ <- data.frame(sent_pvalues_sign_scores_1_2_3[,c(1,(1+i))]) %>%
dplyr::rename(p_values = 2)%>%
dplyr::mutate(p_ = case_when(
between(p_values, 0, 0.001) ~ "3",
between(p_values, 0.002, 0.0249) ~ "2",
between(p_values, 0.0250, 1) ~ "1",
TRUE ~ NA_character_
))%>%
dplyr::select(c(PFA, p_)) %>%
dplyr::left_join(data.frame(sent_pvalues_sign_scores_1_2_3[,c(1,(loop_col+1+i))])) %>%
dplyr::mutate(p_2 = if_else(.[3]=="TRUE", paste(p_,"", sep=""), paste("-",p_,sep="")))%>%
dplyr::mutate(p_2 = as.numeric(p_2)) %>%
dplyr::mutate(p_3 = if_else((p_2 == -1 | p_2 == 1), 0, p_2))
p_class <- cbind(p_class, n_[,5])
}
colnames(p_class) <- colnames(sent_pvalues_sign_scores_1_2_3)[2: (loop_col+1)] #just borrowing the 'colnames' here.
scores <- sent_pvalues_sign_scores_1_2_3[,c(8:10)]
colnames(scores) <- colnames(sent_pvalues_sign_scores_1_2_3)[5: 7] # also borrowing
final_p_class_scores <- data.frame(cbind(PFA=sent_pvalues_sign_scores_1_2_3[,c(1)], p_class, scores))
#--------------------------------------------------------------
#load shapfile
study_area <- readOGR(dsn=".", layer="england_wales_pfas")
regional_boundary <- readOGR(dsn=".", layer="regional_boundary")
regional_boundary <- st_as_sf(regional_boundary)
#plot each result
for(j in 1:3){ #j<-1
study_area_ <- st_as_sf(study_area)
study_area_ <- study_area_ %>%
dplyr::left_join(final_p_class_scores)
# choose a point on the surface of each geometry
#nc3_points <- sf::st_point_on_surface(nc3)
study_area_points <- sf::st_point_on_surface(study_area_)
# retrieve the coordinates
study_area_points_coords <- as.data.frame(sf::st_coordinates(study_area_points))
dev.new()
study_area_$to_Fill <- as.data.frame(study_area_points[,(19+j)])[,1]
#study_area_$to_Fill2 <- as.data.frame(study_area_points[,(19+j)])[,1]
study_area_points_coords$to_Label <- round(as.data.frame(study_area_points[(22+j)])[,1], digits = 1)
pvalue_list <- c("0.001 {Obs.<<Exp.}", "0.002-0.025 {Obs.<<Exp.}", "0.026-1.000 {Non Signif.}", "0.002-0.025 {Obs.>>Exp.}", "0.001 {Obs.>>Exp.}")
p_model <- c(-3, -2, 0, 2, 3)
uni_col <- unique(study_area_$to_Fill)[order(unique(study_area_$to_Fill))]
id_ <- which(!p_model %in% uni_col)
#p_model <- p_model[-id]
#display.brewer.pal(n = 5, name = 'RdBu')
colors <- brewer.pal(n = 5, name = "RdBu")
if(length(id_)!=0){
p_model <- p_model[-id_]
colors <- colors[-id_]
pvalue_list <- pvalue_list[-id_]
}
##pvalue_list <- data.frame(cbind(pvalue_list, to_Fill=p_model))
##pvalue_list$to_Fill <- as.numeric(pvalue_list$to_Fill)
#which is "1"
id <- which(uni_col==0)
#colors[id] <- "white"
# #display.brewer.pal(n = 5, name = 'RdBu')
# colors <- brewer.pal(n = 5, name = "RdBu")
# colors <- colors[-id_]
# colors[id] <- "white"
##pvalue_list$pvalue_list <- factor(pvalue_list$pvalue_list, levels = pvalue_list$pvalue_list)
##study_area_2 <- study_area_ %>%
##dplyr::left_join(pvalue_list)
##study_area_$pvalue_list <-
regional_ss <- st_centroid(regional_boundary)
#ggplot()+
#dev.new()
if(j == 1){
Period1 = ggplot() +
geom_sf(data = study_area_, aes(fill = as.factor(to_Fill))) +
###scale_fill_manual(values = colors) + #,
#guide = guide_legend(override.aes = list(shape = rep(20, length(pvalue_list)), color = colors, size = 8))) +
geom_text(data = study_area_points_coords, aes(X, Y, label = to_Label), colour = "white") +
labs(title = "Period1")+
labs(fill="P-Values") +
geom_sf(data = regional_boundary, alpha = 0, cex=1.2, color="black") +
geom_text(data=regional_ss,aes(x=long,y=lat,label=Regions),
nudge_x = 0, nudge_y = 0,
check_overlap = F, size=3)+
scale_fill_manual(values=colors,
labels = pvalue_list)+
# scale_color_discrete(name="P-Values",
#                      labels=pvalue_list)+
#scale_color_hue(labels = pvalue_list)+
theme_light() #+
#theme_bw()
}
#name="Sentiment\nValues"
if(j == 2){
Period2 = ggplot() +
geom_sf(data = study_area_, aes(fill = as.factor(to_Fill))) +
##scale_fill_manual(values = colors) + #,
#guide = guide_legend(override.aes = list(shape = rep(20, length(pvalue_list)), color = colors, size = 8))) +
geom_text(data = study_area_points_coords, aes(X, Y, label = to_Label), colour = "white") +
labs(title = "Period2")+
labs(fill="P-Values") +
geom_sf(data = regional_boundary, alpha = 0, cex=1.2, color="black") +
geom_text(data=regional_ss,aes(x=long,y=lat,label=Regions),
nudge_x = 0, nudge_y = 0,
check_overlap = F, size=3)+
scale_fill_manual(values=colors,
labels = pvalue_list)+
#scale_color_hue(labels = pvalue_list)+
theme_light() #+
#theme_bw()
}
if(j == 3){
Period3 = ggplot() +
geom_sf(data = study_area_, aes(fill = as.factor(to_Fill))) +
##scale_fill_manual(values = colors) + #,
#guide = guide_legend(override.aes = list(shape = rep(20, length(pvalue_list)), color = colors, size = 8))) +
geom_text(data = study_area_points_coords, aes(X, Y, label = to_Label), colour = "white") +
labs(title = "Period3")+
labs(fill="P-Values") +
geom_sf(data = regional_boundary, alpha = 0, cex=1.2, color="black") +
geom_text(data=regional_ss,aes(x=long,y=lat,label=Regions),
nudge_x = 0, nudge_y = 0,
check_overlap = T, size=3)+
scale_fill_manual(values=colors,
labels = pvalue_list)+
#scale_color_hue(labels = pvalue_list)+
theme_light() #+
#theme_bw()
}
flush.console()
print(j)
#sleep()
}
ggarrange(
#bxp, dp, labels = c("A", "B"),
Period1, Period2,Period3,
common.legend = TRUE, nrow=1, ncol=3, legend = "bottom"
)
Period1
Period1
Period2
Period3
ggarrange(
#bxp, dp, labels = c("A", "B"),
PR1, PR2,PR3,
common.legend = TRUE, nrow=1, ncol=3, legend = "bottom"
)
#all_UK_bing_combined <- read.table(file="all_obs_exp_Sentiment_ts_1_2_3_ALL_1.csv", sep=",", head=TRUE)
all_UK_bing_combined <- read.table(file="all_obs_exp_Sentiment_ts_1_2_3_ALL_7.csv", sep=",", head=TRUE)
all_UK_bing_combined
all_pvalueS_1 <- read.table(file="all_pvalue_Sentiment_ts_1_7.csv", sep=",", head=TRUE)
all_pvalueS_1
all_pvalueS_1 <- read.table(file="all_pvalue_Sentiment_ts_1_7.csv", sep=",", head=TRUE)
all_pvalueS_2 <- read.table(file="all_pvalue_Sentiment_ts_2_7.csv", sep=",", head=TRUE)
all_pvalueS_3 <- read.table(file="all_pvalue_Sentiment_ts_3_7.csv", sep=",", head=TRUE)
all_p_signs_1 <- read.table(file="all_sentiment_signs_ts_1_7.csv", sep=",", head=TRUE)
all_p_signs_2 <- read.table(file="all_sentiment_signs_ts_2_7.csv", sep=",", head=TRUE)
all_p_signs_3 <- read.table(file="all_sentiment_signs_ts_3_7.csv", sep=",", head=TRUE)
all_pvalueS_1
all_pvalueS_2
all_pvalueS_1 %>%
dplyr::rename(p_value_t1 = pvalue_sentiment)
all_pvalueS_2 %>%
dplyr::rename(p_value_t2 = pvalue_sentiment)
all_pvalueS_3 %>%
dplyr::rename(p_value_t3 = pvalue_sentiment)
all_pvalueS_1 <- all_pvalueS_1 %>%
dplyr::rename(p_value_t1 = pvalue_sentiment)
all_pvalueS_2 <- all_pvalueS_2 %>%
dplyr::rename(p_value_t2 = pvalue_sentiment)
all_pvalueS_3 <- all_pvalueS_3 %>%
dplyr::rename(p_value_t3 = pvalue_sentiment)
all_pvalueS_1 %>%
left_join(all_p_signs_2)
all_pvalueS_1
all_pvalueS_1 %>%
left_join(all_pvalueS_2)
all_pvalueS_2
p_values <- all_pvalueS_1 %>%
left_join(all_pvalueS_2)
p_values %>%
left_join(all_pvalueS_3)
#join 3
p_values <- p_values %>%
left_join(all_pvalueS_3)
head(p_values)
head(p_values)
p_values %>%
relocate(p_value_t1, .after=X)
p_values %>%
relocate(p_value_t1, .after=X)%>%
relocate(X.1, .after=p_value_t3)
p_values %>%
relocate(p_value_t1, .after=X)%>%
relocate(X.1, .after=p_value_t3)
all_pvalueS_1 <- read.table(file="all_pvalue_Sentiment_ts_1_7.csv", sep=",", head=TRUE)
all_pvalueS_2 <- read.table(file="all_pvalue_Sentiment_ts_2_7.csv", sep=",", head=TRUE)
all_pvalueS_3 <- read.table(file="all_pvalue_Sentiment_ts_3_7.csv", sep=",", head=TRUE)
all_pvalueS_1
all_p_signs_1
all_p_signs_1 <- all_p_signs_1 %>%
dplyr::rename(Position_t1 = V1)
all_p_signs_2 <- all_p_signs_2 %>%
dplyr::rename(Position_t2 = V1)
all_p_signs_3 <- all_p_signs_3 %>%
dplyr::rename(Position_t3 = V1)
all_p_signs_1
all_p_signs_1 %>%
left_join(all_p_signs_2)
all_p <- all_p_signs_1 %>%
left_join(all_p_signs_2)
#join 3
all_p <- all_p %>%
left_join(all_p_signs_3)
all_p
all_p = all_p %>%
relocate(Position_t1, .after=V2)%>%
relocate(V3, .after=Position_t3)
all_p
head(p_values)
all_pvalueS_1 <- read.table(file="all_pvalue_Sentiment_ts_1_7.csv", sep=",", head=TRUE)
all_pvalueS_2 <- read.table(file="all_pvalue_Sentiment_ts_2_7.csv", sep=",", head=TRUE)
all_pvalueS_3 <- read.table(file="all_pvalue_Sentiment_ts_3_7.csv", sep=",", head=TRUE)
#--------------
#combine for exporting..
all_pvalueS_1 <- all_pvalueS_1 %>%
dplyr::rename(p_value_t1 = pvalue_sentiment)
all_pvalueS_2 <- all_pvalueS_2 %>%
dplyr::rename(p_value_t2 = pvalue_sentiment)
all_pvalueS_3 <- all_pvalueS_3 %>%
dplyr::rename(p_value_t3 = pvalue_sentiment)
#join 1 and 2
p_values <- all_pvalueS_1 %>%
left_join(all_pvalueS_2)
#join 3
p_values <- p_values %>%
left_join(all_pvalueS_3)
p_values = p_values %>%
relocate(p_value_t1, .after=X)%>%
relocate(X.1, .after=p_value_t3)
head(p_values)
all_p_signs_1 <- read.table(file="all_sentiment_signs_ts_1_7.csv", sep=",", head=TRUE)
all_p_signs_2 <- read.table(file="all_sentiment_signs_ts_2_7.csv", sep=",", head=TRUE)
all_p_signs_3 <- read.table(file="all_sentiment_signs_ts_3_7.csv", sep=",", head=TRUE)
all_p_signs_1 <- all_p_signs_1 %>%
dplyr::rename(Position_t1 = V1)
all_p_signs_2 <- all_p_signs_2 %>%
dplyr::rename(Position_t2 = V1)
all_p_signs_3 <- all_p_signs_3 %>%
dplyr::rename(Position_t3 = V1)
#join 1 and 2
all_p <- all_p_signs_1 %>%
left_join(all_p_signs_2)
#join 3
all_p <- all_p %>%
left_join(all_p_signs_3)
all_p = all_p %>%
relocate(Position_t1, .after=V2)%>%
relocate(V3, .after=Position_t3)%>%
#join both tabes
head(p_values)
#join 1 and 2
all_p <- all_p_signs_1 %>%
left_join(all_p_signs_2)
#join 3
all_p <- all_p %>%
left_join(all_p_signs_3)
all_p = all_p %>%
relocate(Position_t1, .after=V2)%>%
relocate(V3, .after=Position_t3)
head(all_p)
#join both tabes
head(p_values)
head(all_p)
all_p <- all_p_signs_1 %>%
left_join(all_p_signs_2)
#join 3
all_p <- all_p %>%
left_join(all_p_signs_3)
all_p = all_p %>%
relocate(Position_t1, .after=V2)%>%
relocate(V3, .after=Position_t3) %>%
dplyr::rename(X = V2) %>%
dplyr::rename(X.1 = V3)
head(all_p)
#-----------------------
#join both tabes
head(p_values)
p_pos <_ <- p_values %>%
left_join(all_p)
p_pos <- <- p_values %>%
left_join(all_p)
p_pos <- p_values %>%
left_join(all_p)
p_pos
all_pvalueS_1 <- read.table(file="all_pvalue_Sentiment_ts_1_7.csv", sep=",", head=TRUE)
all_pvalueS_2 <- read.table(file="all_pvalue_Sentiment_ts_2_7.csv", sep=",", head=TRUE)
all_pvalueS_3 <- read.table(file="all_pvalue_Sentiment_ts_3_7.csv", sep=",", head=TRUE)
all_p_signs_1 <- read.table(file="all_sentiment_signs_ts_1_7.csv", sep=",", head=TRUE)
all_p_signs_2 <- read.table(file="all_sentiment_signs_ts_2_7.csv", sep=",", head=TRUE)
all_p_signs_3 <- read.table(file="all_sentiment_signs_ts_3_7.csv", sep=",", head=TRUE)
#uncomment the following to generate "p-value" and "position" tables.
#-------------------------
#combine for exporting..
all_pvalueS_1 <- all_pvalueS_1 %>%
dplyr::rename(p_value_t1 = pvalue_sentiment)
all_pvalueS_2 <- all_pvalueS_2 %>%
dplyr::rename(p_value_t2 = pvalue_sentiment)
all_pvalueS_3 <- all_pvalueS_3 %>%
dplyr::rename(p_value_t3 = pvalue_sentiment)
#join 1 and 2
p_values <- all_pvalueS_1 %>%
left_join(all_pvalueS_2)
#join 3
p_values <- p_values %>%
left_join(all_pvalueS_3)
p_values = p_values %>%
relocate(p_value_t1, .after=X)%>%
relocate(X.1, .after=p_value_t3)
head(p_values)
all_p_signs_1 <- all_p_signs_1 %>%
dplyr::rename(Position_t1 = V1)
all_p_signs_2 <- all_p_signs_2 %>%
dplyr::rename(Position_t2 = V1)
all_p_signs_3 <- all_p_signs_3 %>%
dplyr::rename(Position_t3 = V1)
#join 1 and 2
all_p <- all_p_signs_1 %>%
left_join(all_p_signs_2)
#join 3
all_p <- all_p %>%
left_join(all_p_signs_3)
all_p = all_p %>%
relocate(Position_t1, .after=V2)%>%
relocate(V3, .after=Position_t3) %>%
dplyr::rename(X = V2) %>%
dplyr::rename(X.1 = V3)
#-----------------------
#join both tabes
head(p_values)
head(all_p)
p_pos <- p_values %>%
left_join(all_p) %>%
relocate(X.1, .after=Position_t3)%>%
rename(PFA=X, Region = X.1)
write.table(p_pos, file="", sep=",", row.names=F)
write.table(p_pos, file="p_pos.csv", sep=",", row.names=F)
getwd()
library(knitr)
setwd("C:/R/Github/JGIS_Policing_COVID-19/")
render("OP_Source_Code.Rmd", "all")
library(rmarkdown)
render("OP_Source_Code.Rmd", "all")
render("OP_Source_Code.Rmd", html_document(toc = TRUE, toc_depth = 2))
study_area <- readOGR(dsn="R:/HLSS/Big Data Centre/Data/TRANSFER_TO_SERVER_ROOM/ARCHIVE/20191028/GMP/AMO", layer="oa_lsoa_geom_classification_2")
length(study_area)
plot(study_area)
study_area@data
d <- read.table(file="//staffhome/staff_home0/55131065/Documents/project with Lian Duan/2011 OAC Clusters and Names.csv", sep=",", head=TRUE)
head(d)
study_area$OA_SA
length(which(study_area$OA_SA %in% d$Output.Area.Code))
length(study_area)
dat <- read.table(file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descriptive_summary.csv", sep=",", head=TRUE)
dat <- read.csv2(file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descriptive_summary.csv", sep=",", head=TRUE)
head
head(dat)
library(dplyr)
dat %>%
group_by(Type, Description, year)%>%
summarise(total=sum(n))
dat %>%
group_by(Type, Description, year)%>%
summarise(total=sum(n))%>%
spread(Year, Description)
dat %>%
group_by(Type, Description, year)%>%
summarise(total=sum(n))%>%
spread(year, Description)
dat %>%
group_by(Description, year)%>%
summarise(total=sum(n))%>%
spread(year, Description)
dat <- dat %>%
group_by(Description, year)%>%
summarise(total=sum(n))
dat
dat <- dat %>%
group_by(Description, year)%>%
summarise(total=sum(n))%>%
filter(year %in% c(2003:2014))
dat <- read.csv2(file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descriptive_summary.csv", sep=",", head=TRUE)
head(dat)
dat_ <- dat %>%
group_by(Description, year)%>%
summarise(total=sum(n))%>%
filter(year %in% c(2003:2014))
dat_
dat_2 <- data.frame(dat_)
dat_2
library(reshape2)
head(dat_2)
head(dat_2)
data_wide <- dcast(dat_2, Description ~ year, value.var="total")
data_wide
head(dat)
dat <- read.csv2(file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descriptive_summary.csv", sep=",", head=TRUE)
head(dat)
dat_ <- dat %>%
group_by(Description, Type, year)%>%
rename(Category = Type) %>%
summarise(total=sum(n))%>%
filter(year %in% c(2003:2014))
dat_2 <- data.frame(dat_)
head(dat_2)
dat <- read.csv2(file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descriptive_summary.csv", sep=",", head=TRUE)
head(dat)
dat_ <- dat %>%
group_by(Description, Type, year)%>%
rename(Category = Type) %>%
summarise(total=sum(n))%>%
filter(year %in% c(2003:2014))
dat_2 <- data.frame(dat_)
head(dat_2)
library(reshape2)
data_wide <- dcast(dat_2, Description + Category ~ year, value.var="total")
data_wide
head(data_wide)
data_wide_ <- data_wide %>%
relocate(Category, .before=Description)
head(data_wide_)
nrow(data_wide_)
data_wide_ <- data_wide %>%
relocate(Category, .before=Description) %>%
arrange(Category)
head(data_wide_)
nrow(data_wide_)
dat <- read.csv2(file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descriptive_summary.csv", sep=",", head=TRUE)
head(dat)
dat[which(dat$Description  == "\\Consumption of alcohol in designated places"),]
write.table(data_wide_, file="descrpt.csv", sep=".", row.names = F)
getwd()
write.table(data_wide_, file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descrpt.csv", sep=".", row.names = F)
write.table(data_wide_, file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descrpt.csv", sep=",", row.names = F)
write.table(data_wide_, file="R:/HLSS/Big Data Centre/Data/TRANSFER_FROM_SERVER_ROOM/20210127/GG/AMO/descrpt.csv", sep=",", row.names = F)
